syntax = "proto3";

message NdArray {
    repeated uint64 shape = 1;
    repeated double values = 2;
    optional string dtype = 3;
}

message Value {
    oneof value {
        bool bool_value = 1;
        string string_value = 2;
        int64 int_value = 3;
        double float_value = 4;
        bytes bytes_value = 5;
        NdArray array_value = 6;

        // for platform-specific types with custom serialization.
        bytes binary_value = 100;
    }
}

message Method {
    string name = 1;
    repeated Value args = 2;
    optional string module = 3;
}

message FunctorObjective {
    Method objective = 1;
    Method gradient = 2;
}


// Constraints

message LinearConstraint {
    NdArray a = 1;
    NdArray b = 2;
}

message FixedValueConstraint {
    uint64 var_index = 1;
    double value = 2;
}

message BoundConstraint {
    uint64 var_index = 1;
    double lower = 2;
    double upper = 3;
}

message Constraints {
    LinearConstraint linear_inequalities = 1;
    LinearConstraint linear_equalities = 2;
    repeated FixedValueConstraint fixed_value_constraints = 3;
    repeated BoundConstraint bound_constraints = 4;
    repeated BoundConstraint integer_constraints = 5;
    repeated int64 binary_constraints = 6;
}

// Initializers

message UniformInitializer {
    NdArray a = 1;
    NdArray b = 2;
}

message Configuration {
    double epsilon = 1;
}

// Got a problem.

message Problem {
    oneof objective {
        FunctorObjective functor_objective = 1;
        Method instance_objective = 2;
    }
    Constraints constraints = 20;
    oneof initializer {
        NdArray fixed_initializer = 30;
        UniformInitializer uniform_initializer = 31;
    }
    Method direction_calculator = 50;
    repeated Method steplength_calculators = 51;
    repeated Method stoppers = 52;

    Configuration config = 60;
}

// Got a solution.
enum Termination {
    TERMINATION_UNSPECIFIED = 0;
    TERMINATION_FAILED_INITIALIZATION = 1;
    TERMINATION_MAX_ITERATION = 2;
    TERMINATION_INFINITESIMAL_STEP = 3;
    TERMINATION_SATISFIED = 4;
    TERMINATION_FAILED = 5;
}

message Solution {
    optional NdArray x = 1;
    optional Termination termination = 2;
    optional int64 iteration = 3;
    optional double objective = 4;
    optional double spent_time_ms = 5;

    map<string, Value> others = 100;
}
